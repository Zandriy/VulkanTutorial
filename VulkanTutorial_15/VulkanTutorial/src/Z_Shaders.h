/* Z_Shaders.h
* VulkanTutorial project
*
* Created by Andriy Zhabura on 13-Dec-2016.
* Last modified on 13-Dec-2016.
*/

/*
* Copyright © 2016 Andriy Zhabura
*
* Permission to use, copy, modify, distribute, and sell this software and its
* documentation for any purpose is hereby granted without fee, provided that
* the above copyright notice appear in all copies and that both that copyright
* notice and this permission notice appear in supporting documentation, and
* that the name of the copyright holders not be used in advertising or
* publicity pertaining to distribution of the software without specific,
* written prior permission.  The copyright holders make no representations
* about the suitability of this software for any purpose.  It is provided "as
* is" without express or implied warranty.
*
* THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
* INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
* EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
* CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
* DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
* TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE
* OF THIS SOFTWARE.
*/

#ifndef Z_Shaders_h
#define Z_Shaders_h

#include <string>
#include <cstdint>

static const char *vertShaderText = R"""(
#version 400
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
layout (std140, binding = 0) uniform bufferVals {
    mat4 mvp;
} myBufferVals;
layout (location = 0) in vec4 pos;
layout (location = 1) in vec4 inColor;
layout (location = 0) out vec4 outColor;
out gl_PerVertex { 
    vec4 gl_Position;
};
void main() {
   outColor = inColor;
   gl_Position = myBufferVals.mvp * pos;
}
)""";

static const uint32_t vert_spir_v[] {
	0x07230203, 0x00010000, 0x00080001, 0x0000001d,
	0x00000000, 0x00020011, 0x00000001, 0x0006000b,
	0x00000001, 0x4c534c47, 0x6474732e, 0x3035342e,
	0x00000000, 0x0003000e, 0x00000000, 0x00000001,
	0x0009000f, 0x00000000, 0x00000004, 0x6e69616d,
	0x00000000, 0x00000009, 0x0000000b, 0x0000000f,
	0x00000019, 0x00030003, 0x00000002, 0x00000190,
	0x00090004, 0x415f4c47, 0x735f4252, 0x72617065,
	0x5f657461, 0x64616873, 0x6f5f7265, 0x63656a62,
	0x00007374, 0x00090004, 0x415f4c47, 0x735f4252,
	0x69646168, 0x6c5f676e, 0x75676e61, 0x5f656761,
	0x70303234, 0x006b6361, 0x00040005, 0x00000004,
	0x6e69616d, 0x00000000, 0x00050005, 0x00000009,
	0x4374756f, 0x726f6c6f, 0x00000000, 0x00040005,
	0x0000000b, 0x6f436e69, 0x00726f6c, 0x00060005,
	0x0000000d, 0x505f6c67, 0x65567265, 0x78657472,
	0x00000000, 0x00060006, 0x0000000d, 0x00000000,
	0x505f6c67, 0x7469736f, 0x006e6f69, 0x00030005,
	0x0000000f, 0x00000000, 0x00050005, 0x00000013,
	0x66667562, 0x61567265, 0x0000736c, 0x00040006,
	0x00000013, 0x00000000, 0x0070766d, 0x00060005,
	0x00000015, 0x7542796d, 0x72656666, 0x736c6156,
	0x00000000, 0x00030005, 0x00000019, 0x00736f70,
	0x00040047, 0x00000009, 0x0000001e, 0x00000000,
	0x00040047, 0x0000000b, 0x0000001e, 0x00000001,
	0x00050048, 0x0000000d, 0x00000000, 0x0000000b,
	0x00000000, 0x00030047, 0x0000000d, 0x00000002,
	0x00040048, 0x00000013, 0x00000000, 0x00000005,
	0x00050048, 0x00000013, 0x00000000, 0x00000023,
	0x00000000, 0x00050048, 0x00000013, 0x00000000,
	0x00000007, 0x00000010, 0x00030047, 0x00000013,
	0x00000002, 0x00040047, 0x00000015, 0x00000022,
	0x00000000, 0x00040047, 0x00000015, 0x00000021,
	0x00000000, 0x00040047, 0x00000019, 0x0000001e,
	0x00000000, 0x00020013, 0x00000002, 0x00030021,
	0x00000003, 0x00000002, 0x00030016, 0x00000006,
	0x00000020, 0x00040017, 0x00000007, 0x00000006,
	0x00000004, 0x00040020, 0x00000008, 0x00000003,
	0x00000007, 0x0004003b, 0x00000008, 0x00000009,
	0x00000003, 0x00040020, 0x0000000a, 0x00000001,
	0x00000007, 0x0004003b, 0x0000000a, 0x0000000b,
	0x00000001, 0x0003001e, 0x0000000d, 0x00000007,
	0x00040020, 0x0000000e, 0x00000003, 0x0000000d,
	0x0004003b, 0x0000000e, 0x0000000f, 0x00000003,
	0x00040015, 0x00000010, 0x00000020, 0x00000001,
	0x0004002b, 0x00000010, 0x00000011, 0x00000000,
	0x00040018, 0x00000012, 0x00000007, 0x00000004,
	0x0003001e, 0x00000013, 0x00000012, 0x00040020,
	0x00000014, 0x00000002, 0x00000013, 0x0004003b,
	0x00000014, 0x00000015, 0x00000002, 0x00040020,
	0x00000016, 0x00000002, 0x00000012, 0x0004003b,
	0x0000000a, 0x00000019, 0x00000001, 0x00050036,
	0x00000002, 0x00000004, 0x00000000, 0x00000003,
	0x000200f8, 0x00000005, 0x0004003d, 0x00000007,
	0x0000000c, 0x0000000b, 0x0003003e, 0x00000009,
	0x0000000c, 0x00050041, 0x00000016, 0x00000017,
	0x00000015, 0x00000011, 0x0004003d, 0x00000012,
	0x00000018, 0x00000017, 0x0004003d, 0x00000007,
	0x0000001a, 0x00000019, 0x00050091, 0x00000007,
	0x0000001b, 0x00000018, 0x0000001a, 0x00050041,
	0x00000008, 0x0000001c, 0x0000000f, 0x00000011,
	0x0003003e, 0x0000001c, 0x0000001b, 0x000100fd,
	0x00010038
};

static const char *fragShaderText = R"""(
#version 400
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
layout (location = 0) in vec4 color;
layout (location = 0) out vec4 outColor;
void main() {
   outColor = color;
}
)""";

static const uint32_t frag_spir_v[] {
	0x07230203, 0x00010000, 0x00080001, 0x0000000d,
	0x00000000, 0x00020011, 0x00000001, 0x0006000b,
	0x00000001, 0x4c534c47, 0x6474732e, 0x3035342e,
	0x00000000, 0x0003000e, 0x00000000, 0x00000001,
	0x0007000f, 0x00000004, 0x00000004, 0x6e69616d,
	0x00000000, 0x00000009, 0x0000000b, 0x00030010,
	0x00000004, 0x00000007, 0x00030003, 0x00000002,
	0x00000190, 0x00090004, 0x415f4c47, 0x735f4252,
	0x72617065, 0x5f657461, 0x64616873, 0x6f5f7265,
	0x63656a62, 0x00007374, 0x00090004, 0x415f4c47,
	0x735f4252, 0x69646168, 0x6c5f676e, 0x75676e61,
	0x5f656761, 0x70303234, 0x006b6361, 0x00040005,
	0x00000004, 0x6e69616d, 0x00000000, 0x00050005,
	0x00000009, 0x4374756f, 0x726f6c6f, 0x00000000,
	0x00040005, 0x0000000b, 0x6f6c6f63, 0x00000072,
	0x00040047, 0x00000009, 0x0000001e, 0x00000000,
	0x00040047, 0x0000000b, 0x0000001e, 0x00000000,
	0x00020013, 0x00000002, 0x00030021, 0x00000003,
	0x00000002, 0x00030016, 0x00000006, 0x00000020,
	0x00040017, 0x00000007, 0x00000006, 0x00000004,
	0x00040020, 0x00000008, 0x00000003, 0x00000007,
	0x0004003b, 0x00000008, 0x00000009, 0x00000003,
	0x00040020, 0x0000000a, 0x00000001, 0x00000007,
	0x0004003b, 0x0000000a, 0x0000000b, 0x00000001,
	0x00050036, 0x00000002, 0x00000004, 0x00000000,
	0x00000003, 0x000200f8, 0x00000005, 0x0004003d,
	0x00000007, 0x0000000c, 0x0000000b, 0x0003003e,
	0x00000009, 0x0000000c, 0x000100fd, 0x00010038
};

#endif // Z_Shaders_h